/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
    if(root == null)   return true;
    int leftSideHeight =  calculateHeight(root.left);
    int rightSideHeight =  calculateHeight(root.right);

    
    if (Math.abs(leftSideHeight - rightSideHeight) <= 1 && isBalanced( root.left)== true && isBalanced( root.right) == true)
        return true;
        return false;
    }
    public int calculateHeight(TreeNode root){
     if(root == null) return 0;
     return Math.max(calculateHeight(root.left), calculateHeight(root.right)) + 1;
}
}